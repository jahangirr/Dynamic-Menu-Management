@model  List<SilGlobalFashion.Models.PriceQuatation>
@using SilGlobalFashion.Models;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!DOCTYPE html>

@{

    HtmlString hostAddress = new HtmlString(Session["HostAddress"].ToString());

}

<script src="@hostAddress/Scripts/tableHeadFixer.js"></script>


<style>
    tr.highlighted td {
        background-color: salmon;
    }
</style>


<html>
<head>

    <link href="~/Content/TableStyle.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <title> Price Quotation  Edit  </title>
</head>
<body>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @{


                if (Session["PriceQuatationList"] != null)
                {
                    List<PriceQuatation> tempPOSheet = (List<PriceQuatation>)Session["PriceQuatationList"];

                    if (tempPOSheet.Count() > 0)
                    {
                        int totalItem = tempPOSheet.Count();

                        <div id="selectionDivToShow" style="border:dotted; color:black; background-color:Highlight;">
                            <table class="table" id="SprTable" height="300">

                                <tr>
                                    <td> Id </td>

                                    <th>
                                        Master SPO / Indent
                                    </th>

                                    <th>
                                        Spr Or IndentNo
                                    </th>

                                    <th>
                                        Item Name
                                    </th>
                                    <th>
                                        Item Code

                                    </th>
                                    <th>
                                        Order Quantity

                                    </th>

                                    <th>
                                        Supplier Name
                                    </th>
                                    <th>
                                        Supplier Code

                                    </th>

                                    <th>
                                        Unit Cost

                                    </th>

                                    <th>
                                        Total Value Item Wise

                                    </th>

                                    <th>
                                        Currency

                                    </th>

                                    <th>
                                        Necessary Instruction

                                    </th>

                                    <th>
                                        Tick to Process

                                    </th>


                                </tr>

                                @for (var i = 0; i < totalItem; i++)
                                {




                                    <tr>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].Id, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly"  })

                                        </td>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].MOMSprOrIndentNo, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly" })

                                        </td>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].SprOrIndentNo, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly" })

                                        </td>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].ItemName, new { Style = "vertical-align:3px", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].ItemCode, new { Style = "vertical-align:3px;width:85px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].OrderQuantity, new { Style = "vertical-align:3px;width:85px;", @readonly = "readonly", @class = "OrderQuantity_class", id = "OrderQuantity_" + @i })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].SupplierName, new { Style = "vertical-align:3px", @class = "SupplierName_class", id = "SupplierName_" + @i })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].SupplierCode, new { Style = "vertical-align:3px;width:85px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].UnitCost, new { Style = "vertical-align:3px;width:75px;", @class = "UnitCost_class", id = "UnitCost_" + @i })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].TotalValueItemWise, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly", @class = "TotalValueItemWise_class", id = "TotalValueItemWise_" + @i })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].UnitCurrency, new { Style = "vertical-align:3px;width:75px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].NecessaryInstruction, new { Style = "vertical-align:3px;width:110px;" })
                                        </td>

                                        <td>
                                            @Html.CheckBoxFor(it => it[i].IsCheckToProcess)
                                        </td>




                                    </tr>


                                }
                            </table>

                        </div>
                    }
                }
            }

            <div class="alert-success">


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Edit Price Quotation" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
                }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>


<script type="text/javascript">

    $(document).ready(function () {


        $("#SprTable").tableHeadFixer({ "left": 5 });


        $('#SprTable tr').click(function (e) {
            $('#SprTable tr').removeClass('highlighted');
            $(this).addClass('highlighted');
        });


        $('#SprTable').on('click', 'tbody tr', function (event) {
            $(this).addClass('highlight').siblings().removeClass('highlight');
        });



        $(".SupplierName_class").autocomplete({

            source: function (request, response) {

                var inputVal = $(".highlight").closest('tr').find("td:eq(6) input").val();

                $.ajax({
                    url: '@Url.Action("GetSupplierName")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        SupplierName: inputVal
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });



        $(".SupplierName_class").on("change", function () {

            var inputVal = $(".highlight").closest('tr').find("td:eq(6) input").val();
            console.log(inputVal);

            $.ajax({
                url: '@Url.Action("GetSupplier")',
                type: "GET",
                dataType: "JSON",
                data: {
                    SupplierName: inputVal
                },
                success: function (data) {

                    console.log(data);
                    console.log(data.SupplierCode);

                    $(".highlight").closest('tr').find("td:eq(7) input").val(data.SupplierCode);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //debugger;
                    alert(textStatus);
                }
            });
        });




        $(".UnitCost_class").on("change", function () {

            var inputUnitPrize = $(".highlight").closest('tr').find("td:eq(8) input").val();
            var inputOrderQty = $(".highlight").closest('tr').find("td:eq(5) input").val();
            var parseinputUnitPrize = parseFloat(inputUnitPrize);
            var parseinputOrderQty = parseFloat(inputOrderQty);
            if ($.isNumeric(inputUnitPrize) && $.isNumeric(inputOrderQty)) {
                var tempTotal = parseinputUnitPrize * inputOrderQty;
                $(".highlight").closest('tr').find("td:eq(9) input").val(tempTotal);
            }
        });


        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });

    });

</script>