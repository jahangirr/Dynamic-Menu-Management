@model SilGlobalFashion.Models.ItemOrPrizeFinalCorrection
@using SilGlobalFashion.Repository;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/Content/TableStyle.css" rel="stylesheet" />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Item Quantity Or Prize Final Correction</h4>
    <div>
        *** After Creating PO, for Any Correction of Quantity or Prize at any stage
        *** Item Return

    </div>
    <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="alert-success">

                <div class="alert-warning">

                    <table class="table" width="100%" style="color:black;">

                        <tr>
                            <td colspan="4">

                                Help On  : @Html.TextBox("SearchOnHelp")  <div id="searchOnHelpShowBox">
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td>

                                PO No : @Html.TextBox("PONumber")

                            </td>

                            <td>
                                @{

                                    GlobCreatedFunction globbCreFunc = new GlobCreatedFunction();

                                    DateTime? PORevisedDate = null;

                                    string checkTime = globbCreFunc.GetDate(ViewBag.PORevisedDate as string);

                                    string kkks = "";

                                    PORevisedDate = Convert.ToDateTime(globbCreFunc.GetDate(ViewBag.PORevisedDate as string));

                                }

                                Date : @Html.JQueryUI().Datepicker("PORevisedDate", PORevisedDate)

                            </td>
                            <td>

                                MOMSprOrIndentNo: @Html.TextBox("MOMSprOrIndentNo")


                            </td>

                            <td>

                                SprOrIndentNo: @Html.TextBox("SprOrIndentNo")


                            </td>

                        </tr>

                        <tr>
                            <td>

                                Supplier Code : @Html.TextBox("SupplierCode", null, new { @readonly = "readonly" })

                            </td>

                            <td>


                                Supplier Name : @Html.TextBox("SupplierName", null, new { style = "width:300px;", @readonly = "readonly" })


                            </td>
                            <td>

                                Item Name : @Html.TextBox("ItemName", null, new { @readonly = "readonly" })


                            </td>

                            <td>

                                Item Code: @Html.TextBox("ItemCode", null, new { @readonly = "readonly" })


                            </td>

                        </tr>

                        <tr>
                            <td>

                                Order Quantity : @Html.TextBox("OrderQuantity", null, new { @readonly = "readonly" })

                            </td>

                            <td>


                                Unit Cost : @Html.TextBox("UnitCost", null, new { @readonly = "readonly" })


                            </td>
                            <td colspan="2">

                                Unit Currency : @Html.TextBox("UnitCurrency", null, new { @readonly = "readonly" })


                            </td>



                        </tr>


                        <tr>
                            <td>

                                Revised Order Quantity  : @Html.TextBox("OrderQuantityRevised")

                            </td>

                            <td>


                                Revised Unit Cost  : @Html.TextBox("UnitCostRevised")


                            </td>
                            <td>

                                Revised  Unit Currency  : @Html.TextBox("UnitCurrencyRevised", null, new { @readonly = "readonly" })


                            </td>

                            <td>

                                Total Value Item Wise : @Html.TextBox("TotalValueItemWise", null, new { @readonly = "readonly" })


                            </td>



                        </tr>

                        <tr>
                            <td colspan="3">

                                Remarks : @Html.TextBox("Remarks", null, new { style = "width:900px;" })

                            </td>

                            <td>

                                Is Deleted If Zero : @Html.CheckBox("IsDeletedIfZero")

                            </td>


                        </tr>



                    </table>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            </div>
                                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>

    $(document).ready(function () {



        $("#SearchOnHelp").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSearchOnHelp")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        SearchOnHelp: $("#SearchOnHelp").val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });




        $("#PONumber").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetPoRevised")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        showHelpItem: ''
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });


        $("#MOMSprOrIndentNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetPoWithMOMSPRRevised")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        showHelpItem: '',
                        PONumber: $('#PONumber').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });

        $("#SprOrIndentNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetPoSPRRevised")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        showHelpItem: '',
                        PONumber: $('#PONumber').val(),
                        MOMSprOrIndentNo: $('#MOMSprOrIndentNo').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });






        $('#SprOrIndentNo').change(function () {

            $.ajax({
                url: '@Url.Action("GetPoSPRDetails", "POInDefferentCurrencies")',
                type: "GET",
                dataType: "JSON",
                data: {
                    SprOrIndentNo: $('#SprOrIndentNo').val()
                },
                success: function (data) {
                    console.log(data);
                    if ($.trim(data)) {

                        $("#SupplierCode").val(data.SupplierCode);
                        $("#SupplierName").val(data.SupplierName);
                        $("#ItemName").val(data.ItemName);
                        $("#ItemCode").val(data.ItemCode);
                        $("#OrderQuantity").val(data.OrderQuantity);
                        $("#UnitCost").val(data.UnitCost);
                        $("#UnitCurrency").val(data.UnitCurrency);
                        $("#UnitCurrencyRevised").val(data.UnitCurrency);
                        $("#OrderQuantityRevised").val(data.OrderQuantity);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //debugger;
                    alert("LastItemPurchseRate");
                }
            });

        });


        $('#SearchOnHelp').change(function () {

            $.ajax({
                url: '@Url.Action("GetSearchOnHelpDetails")',
                type: "GET",
                dataType: "JSON",
                data: {
                    SearchOnHelp: $('#SearchOnHelp').val()
                },
                success: function (data) {
   
                    console.log('data===========================>>>>>>>>>>>>>>====================>>>>>>>>>=====');
                    console.log(data);
                    var showHelpVar =  data.MOMSprOrIndentNo + '   =====> ' + data.SprOrIndentNo + '   =====> ' + data.PONumber;
                    $('#searchOnHelpShowBox').text(showHelpVar);

                    

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //debugger;
                    alert("No Help");
                }
            });

        });


        //



        $('#UnitCostRevised').change(function () {

            if ($.isNumeric($('#UnitCostRevised').val())) {
                var totalPriceUnitCostRevised = Number($("#OrderQuantityRevised").val()) * Number($("#UnitCostRevised").val());
                console.log('totalPriceUnitCostRevised -- UnitCostRevised');
                console.log(totalPriceUnitCostRevised);
                $("#TotalValueItemWise").val(totalPriceUnitCostRevised.toString());
            }

        });


        $('#OrderQuantityRevised').change(function () {

            if ($.isNumeric($('#UnitCostRevised').val())) {
                var totalPrice = Number($("#OrderQuantityRevised").val()) * Number($("#UnitCostRevised").val());
                console.log('totalPrice -- OrderQuantityRevised');
                console.log(totalPrice);
                $("#TotalValueItemWise").val(totalPrice.toString());
            }

        });





    });
</script>
