@model  List<SilGlobalFashion.Models.POPreSheet>
@using SilGlobalFashion.Models;
@using SilGlobalFashion.Repository;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!DOCTYPE html>

<html>
<head>

    <link href="~/Content/TableStyle.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <title> PO  Edit  </title>
</head>
<body>

    <div class="form-horizontal">
        <h4> PO Sheet  Modification  </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div style="border:groove;background-color:#C0C0C0;border:2px; border-color:blue;color:black;">
            <strong>PO Num:</strong>

            @Html.TextBox("PONumberEShow", ViewBag.PONumberE as string, htmlAttributes: new { disabled = "disabled" })
            @Html.Hidden("PONumberE", ViewBag.PONumberE as string)

            @{

                GlobCreatedFunction gcf = new GlobCreatedFunction();

                DateTime? PODate = null;
                try
                {
                    PODate = Convert.ToDateTime(gcf.GetDate(ViewBag.PODate));
                }
                catch (Exception ex)
                {

                }

            }

            <strong>Date:</strong>
            @Html.JQueryUI().Datepicker("PODateE", PODate)



            <strong> Supp. Name : </strong>
            @Html.TextBox("SupplierNameE", ViewBag.SupplierNameE as string)

            <strong>Code: </strong>
            @Html.TextBox("SupplierCodeShow", ViewBag.SupplierCode as string, htmlAttributes: new { disabled = "disabled", style = "width:90px;" })

            @Html.Hidden("SupplierCodeE", ViewBag.SupplierCodeE as string)



        </div>



    </div>



    <div id="selectionDivToShow" style="border:dotted; color:black; background-color:Highlight;">



        @{

            if (Session["POPreSheetList"] != null)
            {
                List<POPreSheet> tempPOSheet = (List<POPreSheet>)Session["POPreSheetList"];

                if (tempPOSheet.Count() > 0)
                {

                    HtmlString HSPONumber = new HtmlString("PO Number : " + tempPOSheet[0].PONumber.ToString());
                    @HSPONumber
                    HtmlString HSPODate = new HtmlString("  ||   PO Date : " + tempPOSheet[0].PODate.ToString().Substring(0, 10));
                    @HSPODate
                    HtmlString HSSupplierCode = new HtmlString("  ||   Supplier Code : " + tempPOSheet[0].SupplierCode.ToString());
                    @HSSupplierCode

                    HtmlString HSSupplierName = new HtmlString("   ||    Supplier Name : " + tempPOSheet[0].SupplierName.ToString());
                    @HSSupplierName
                }
            }
        }


    </div>




    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @{


                if (Session["POPreSheetList"] != null)
                {
                    List<POPreSheet> tempPOSheet = (List<POPreSheet>)Session["POPreSheetList"];

                    if (tempPOSheet.Count() > 0)
                    {
                        int totalItem = tempPOSheet.Count();

                        <div id="selectionDivToShow" style="border:dotted; color:black; background-color:Highlight;">
                            <table class="table table-bordered">

                                <tr>


                                    <th>
                                        <h3>Master SPO / Indent </h3>
                                    </th>

                                    <th>
                                        <h3>Spr Or IndentNo</h3>
                                    </th>

                                    <th>
                                        <h3> Item Name</h3>
                                    </th>
                                    <th>
                                        <h3> Item Code</h3>

                                    </th>
                                    <th>
                                        <h3> Order Quantity</h3>

                                    </th>

                                    <th>
                                        <h3>Unit Cost</h3>

                                    </th>

                                    <th>
                                        <h3> Total Value Item Wise</h3>

                                    </th>

                                    <th>
                                        <h3> Necessary Instruction</h3>

                                    </th>

                                    <th>
                                        <h3> Tick to Process </h3>

                                    </th>


                                </tr>

                                @for (var i = 0; i < totalItem; i++)
                                {




                                    <tr>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].MOMSprOrIndentNo, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly" })

                                        </td>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].SprOrIndentNo, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly" })

                                        </td>

                                        <td>
                                            @Html.TextBoxFor(it => it[i].ItemName, new { Style = "vertical-align:3px", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].ItemCode, new { Style = "vertical-align:3px;width:85px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].OrderQuantity, new { Style = "vertical-align:3px;width:85px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].UnitCost, new { Style = "vertical-align:3px;width:75px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].TotalValueItemWise, new { Style = "vertical-align:3px;width:100px;", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(it => it[i].NecessaryInstruction, new { Style = "vertical-align:3px;width:110px;" })
                                        </td>

                                        <td>
                                            @Html.CheckBoxFor(it => it[i].IsCheckToProcess)
                                        </td>




                                    </tr>


                                }
                            </table>

                        </div>
                    }
                }
            }

            <div class="alert-success">


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Edit PO" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
                }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>


<script type="text/javascript">

    $(document).ready(function () {


      

        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });



        $("#SupplierNameE").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSupplierName")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        SupplierName: $('#SupplierNameE').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });



        $('#SupplierNameE').change(function () {


            $.ajax({
                url: '@Url.Action("GetSupplierDetialBySupplierName", "POPreSheets")',
                type: "GET",
                dataType: "JSON",
                data: {
                    SupplierName: $('#SupplierNameE').val()
                },
                success: function (data) {

                    if (data.d != "") {
                        $('#SupplierCodeShow').val(data.SupplierCode);
                        $('#SupplierCodeE').val(data.SupplierCode);

                        $('#SupplierCodeE').trigger('change');


                    } else {
                        alert("what is to be supplier code")
                    }


                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //debugger;
                    alert(textStatus);
                }
            });
        });

        $('#SupplierNameE').trigger('change');



       

        $("#PODateE").attr("autocomplete", "off");

        $("input[name='PODateE']").each(function (i, e) {
            var tempDate = $(e).val().toString();
            console.log(tempDate);
            if (tempDate.length > 9) {
                var DateToShow = tempDate.substring(1, 10);
                console.log(DateToShow);
                $(e).val(DateToShow);

            }
        });







    });

</script>