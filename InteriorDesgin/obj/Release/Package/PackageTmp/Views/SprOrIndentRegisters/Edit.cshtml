@model List<SilGlobalFashion.Models.SprOrIndentRegister>
@using SilGlobalFashion.Repository;
@using SilGlobalFashion.Models;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>SPR Or Indent Modification</h2>

<link href="~/Content/TableStyle.css" rel="stylesheet" />

@using (Html.BeginForm("GetAddedSprOrIndentRegister", "SprOrIndentRegisters", FormMethod.Get, new { id = "GetAddedForm" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="alert-success">





        <div class="alert-warning">

            <table class="table" width="100%" style="color:black;">
                <tr>
                    <td width="80%">

                        @Html.Hidden("IdS", ViewBag.IdS as string)

                        @{

                            GlobCreatedFunction globbCreFunc = new GlobCreatedFunction();

                            DateTime? sprOrIndentDate = null;
                            try
                            {

                                var sprDate = ViewBag.SprOrIndentDateS as string;
                                if (sprDate != null && sprDate != "")
                                {
                                    sprOrIndentDate = Convert.ToDateTime(sprDate).Date;
                                }



                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        Date: @Html.JQueryUI().Datepicker("SprOrIndentDateS", sprOrIndentDate)


                        Mother Spr or Indent No  :@Html.TextBox("MOMSprOrIndentNoShow", ViewBag.MOMSprOrIndentNoS as string, htmlAttributes: new { disabled = "disabled" })

                        @Html.Hidden("MOMSprOrIndentNoS", ViewBag.MOMSprOrIndentNoS as string)
                        <br/>
                        <br/>

                        SPR Or Ind.No:@Html.TextBox("SprOrIndentNoSShow", ViewBag.SprOrIndentNoS as string, htmlAttributes: new
                                 {
                                     disabled = "disabled"
                                 })

                        @Html.Hidden("SprOrIndentNoS", ViewBag.SprOrIndentNoS as string)








                    </td>
                    <td width="20%">

                        Required By (Section/Department) : @Html.TextBox("ReqBySecOrDepS", ViewBag.ReqBySecOrDepS as string) <br />
                    </td>
                </tr>
            </table>

        </div>

        <p>
            <table class="table" style="color:black;">
                <tr>

                    <td>
                       
                        Item Name:    @Html.TextBox("ItemNameSShow", ViewBag.ItemNameS as string, htmlAttributes: new { disabled = "disabled" })
                        @Html.Hidden("ItemNameS", ViewBag.ItemNameS as string)


                    </td>

                    <td>
                        Item Code:    @Html.TextBox("ItemCodeSShow", ViewBag.ItemCodeS as string, htmlAttributes: new { disabled = "disabled" })

                        @Html.Hidden("ItemCodeS", ViewBag.ItemCodeS as string)


                    </td>

                    <td>
                       
                        UOM :    @Html.TextBox("UOMSShow", ViewBag.UOMS as string, htmlAttributes: new { disabled = "disabled" })
                        @Html.Hidden("UOMS", ViewBag.UOMS as string)
                    </td>

                </tr>

                <tr>

                    <td>



                        Present Requirement  : @Html.TextBox("PresentRequirementS", ViewBag.PresentRequirementS as string)
                    </td>

                    <td>
                        Stock In Hand : @Html.TextBox("StockInHandS", ViewBag.StockInHandS as string)

                    </td>
                    <td>
                        Average Consumption : @Html.TextBox("AverageConsumptionS", ViewBag.AverageConsumptionS as string)
                    </td>

                </tr>


                <tr>
                    <td>
                        Estimate Rate : @Html.TextBox("EstimateRateS", ViewBag.EstimateRateS as string)

                    </td>
                    <td>
                        Last Purchase Rate : @Html.TextBox("LastPurchaseRateS", ViewBag.LastPurchaseRateS as string)

                    </td>
                    <td>
                        Estimate Value : @Html.TextBox("EstimateValueS", ViewBag.EstimateValueS as string)
                    </td>

                </tr>
                <tr>
                    <td>
                        Estimate Rate : @Html.TextBox("EstimateRateCurS", ViewBag.EstimateRateCurS as string)

                    </td>
                    <td>
                        Last Purchase Rate : @Html.TextBox("LastPurchaseRateCurS", ViewBag.LastPurchaseRateCurS as string)

                    </td>
                    <td>
                        Estimate Value : @Html.TextBox("EstimateValueCurS", ViewBag.EstimateValueCurS as string)
                    </td>

                </tr>


                <tr>
                    <td>
                        Remarks : @Html.TextBox("RemarksS", ViewBag.RemarksS as string)
                    </td>
                    <td> Is Close : @Html.CheckBox("IsCloseS", Convert.ToBoolean(ViewBag.IsCloseS as string)) </td>
                    <td></td>
                    <td>
                        @{

                            string fromAddClick = ViewBag.FromAddClick as string;

                            if (fromAddClick != "Yes")
                            {
                                Session["DataStore"] = null;

                                <input type="button" id="btnGetAddedForm" value="Add" />
                            }

                        }
                       


                    </td>

                </tr>
            </table>



        </p>
    </div>
                            }

<script>


    function getCalledForIsClose ()
    {
        $.ajax({
            url: '@Url.Action("GetCloseStatus", "SprOrIndentRegisters")',
            type: "GET",
            dataType: "JSON",
            data: {
                SprOrIndentNoS: $('#SprOrIndentNoS').val(),
                ItemCodeS: $('#ItemCodeS').val()
            },
            success: function (data) {

                console.log(data);

                $("#IsCloseS").prop('checked', data);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                //debugger;
                alert(textStatus);
            }
        });
    }

    $(document).ready(function () {




        $("input[name^='DateS']").each(function (i, e) {

            var tempDate = $(e).val().toString();
            if (tempDate.length > 9) {
                var DateToShow = tempDate.substring(1, 10);
                $(e).val(DateToShow);

            }
        });


        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });
       

       


        $("#btnGetAddedForm").click(function () {




            var tokenIsValid = 0;
            var VarPresentRequirement = $("#PresentRequirementS").val();



            if ($.isNumeric(VarPresentRequirement) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Present Rquirement ");

            }
            var VarStockInHandS = $("#StockInHandS").val();
            if ($.isNumeric(VarStockInHandS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Stock In Hands ");

            }

            //AverageConsumptionS

            var VarAverageConsumptionS = $("#AverageConsumptionS").val();
            if ($.isNumeric(VarAverageConsumptionS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Average Consumption ");

            }


            var VarEstimateRateS = $("#EstimateRateS").val();
            if ($.isNumeric(VarEstimateRateS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Estimate Rate ");

            }

            var VarLastPurchaseRateS = $("#LastPurchaseRateS").val();
            if ($.isNumeric(VarLastPurchaseRateS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Last Purchase Rate  ");

            }
            var VarEstimateValueS = $("#EstimateValueS").val();
            if ($.isNumeric(VarEstimateValueS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Estimate Value");

            }

            if (tokenIsValid === 0) {

                $('#GetAddedForm').submit();
            }
        });



        setTimeout(getCalledForIsClose, 10);


    });
</script>





@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    int TotalSprOrIndentNo = 0;

    if (Session["DataStore"] != null)
    {
        TotalSprOrIndentNo = ((List<SilGlobalFashion.Models.SprOrIndentRegister>)Session["DataStore"]).Count;
    }

    <div class="alert-info">

        <table class="table" style="color:black;">

            <tr>
                <th>
                    <h5>Item Name</h5>
                </th>
                <th>
                    <h5> Item Code</h5>

                </th>
                <th>
                    <h5>UOM </h5>
                </th>
                <th>
                    <h5>Present Rquirement</h5>

                </th>
                <th>
                    <h5> Stock In Hand </h5>
                </th>
                <th>
                    <h5> Average Consumption </h5>
                </th>
                <th>
                    <h5> Estimate Rate </h5>

                </th>
                <th>
                    <h5> Last Purchase Rate </h5>

                </th>
                <th>
                    <h5> Estimate Value </h5>

                </th>
                <th>
                    <h5> Remarks </h5>

                </th>

                <th>
                    <h5> Is Close </h5>

                </th>


            </tr>

            @for (var i = 0; i < TotalSprOrIndentNo; i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(it => it[i].ItemName)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].ItemCode)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].UOM)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].PresentRequirement)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].StockInHand)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].AverageConsumption)
                    </td>

                    <td>
                        @Html.DisplayFor(it => it[i].EstimateRate)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].LastPurchaseRate)
                    </td>

                    <td>
                        @Html.DisplayFor(it => it[i].EstimateValue)
                    </td>
                    <td>
                        @Html.DisplayFor(it => it[i].Remarks)
                    </td>
                    <td>
                       @Html.DisplayFor(it => it[i].IsClose )
                    </td>
                </tr>


            }

            <tr>
                <th>

                </th>
                <th>


                </th>
                <th>

                </th>
                <th>


                </th>
                <th>

                </th>
                <th>

                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>


                    <div class="btn btn-warning">
                        @Html.ActionLink("Refresh", "PageRefresh")
                    </div>

                </th>
                <th>
                    @using (Html.BeginForm("Edit", "SprOrIndentRegisters", FormMethod.Post))
                    {
                        List<SprOrIndentRegister> sprOrIndentList = (List<SilGlobalFashion.Models.SprOrIndentRegister>)Session["DataStore"];

                        if (sprOrIndentList != null && sprOrIndentList.Count() > 0)
                        {
                            <input type="submit" value="Modify" class="btn btn-success" />
                        }


                    }

                </th>


            </tr>
        </table>

    </div>
}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
    $(document).ready(function () {

        $("#SprOrIndentDateS").attr("autocomplete", "off");

        $('#PresentRequirementS').change(function () {

            var recQty = $('#PresentRequirementS').val();
            var parseRecQty = parseFloat(recQty);
            var uniPri = $('#EstimateRateS').val();

            var parseUniPri = parseFloat(uniPri);

            if ($.isNumeric(recQty) && $.isNumeric(uniPri)) {

                var tempTotal = parseRecQty * parseUniPri;

                $("#EstimateValueS").val(tempTotal.toString());

            }
        });

        $('#EstimateRateS').change(function () {

            var recQty = $('#PresentRequirementS').val();
            var parseRecQty = parseFloat(recQty);
            var uniPri = $('#EstimateRateS').val();
            var parseUniPri = parseFloat(uniPri);
            if ($.isNumeric(recQty) && $.isNumeric(uniPri)) {
                var tempTotal = parseRecQty * parseUniPri;

                $("#EstimateValueS").val(tempTotal.toString());

            }
        });


    })
</script>

