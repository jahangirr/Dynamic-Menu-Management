@model List<SilGlobalFashion.Models.SprOrIndentRegister>
@using SilGlobalFashion.Repository;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>SPR Or Indent Creation</h2>



<link href="~/Content/TableStyle.css" rel="stylesheet" />

@using (Html.BeginForm("GetAddedSprOrIndentRegister", "SprOrIndentRegisters", FormMethod.Get, new { id = "GetAddedForm" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="alert-success">

        <div class="alert-warning">

            <table class="table" width="100%" style="color:black;">
                <tr>
                    <td width="80%">

                        @{

                            GlobCreatedFunction globbCreFunc = new GlobCreatedFunction();

                            DateTime? sprOrIndentDate = null;

                            if (Convert.ToBoolean(ViewBag.IsDateOk))
                            {
                                sprOrIndentDate = globbCreFunc.GetDate(ViewBag.SprOrIndentDateS);
                            }


                        }

                        Date : @Html.JQueryUI().Datepicker("SprOrIndentDateS", sprOrIndentDate)



                        Mother Spr or Indent No  :@Html.TextBox("MOMSprOrIndentNoShow", ViewBag.MOMSprOrIndentNoS as string, htmlAttributes: new { disabled = "disabled" })

                        @Html.Hidden("MOMSprOrIndentNoS", ViewBag.MOMSprOrIndentNoS as string)

                        <br />
                        <br />

                        SPROrInd. No:@Html.TextBox("SprOrIndentNoSShow", ViewBag.SprOrIndentNoS as string, htmlAttributes: new { disabled = "disabled" })

                        @Html.Hidden("SprOrIndentNoS", ViewBag.SprOrIndentNoS as string)








                    </td>
                    <td width="20%">

                        Required By (Section/Department) : @Html.TextBox("ReqBySecOrDepS", ViewBag.ReqBySecOrDepS as string) <br />
                    </td>
                </tr>
            </table>

        </div>

        <p>
            <table class="table" style="color:black;">


                <tr>

                    <td colspan="3">
                        <div id="itemDesShow">


                        </div>
                    </td>
                </tr>


                <tr>

                    <td>
                        Item Name: @Html.TextBox("ItemNameS") @Html.ActionLink("New", "Create", "ItemMasterModels")
                    </td>

                    <td>
                        Item Code: :   @Html.TextBox("ItemCodeSShow", null, htmlAttributes: new { disabled = "disabled" })

                        @Html.Hidden("ItemCodeS")


                    </td>

                    <td>
                        UOM : @Html.TextBox("UOMS")
                    </td>

                </tr>

                <tr>

                    <td>
                        Present Requirement  : @Html.TextBox("PresentRequirementS")
                    </td>

                    <td>
                        Stock In Hand : @Html.TextBox("StockInHandS")

                    </td>
                    <td>
                        Average Consumption : @Html.TextBox("AverageConsumptionS")
                    </td>

                </tr>


                <tr>
                    <td>
                        Estimate Rate : @Html.TextBox("EstimateRateS")

                    </td>
                    <td>
                        Last Purchase Rate : @Html.TextBox("LastPurchaseRateS")

                    </td>
                    <td>
                        Estimate Value : @Html.TextBox("EstimateValueS")
                    </td>

                </tr>

                <tr>
                    <td>

                        Estimate Rate Currency : @Html.DropDownList("EstimateRateCurS", (SelectList)ViewBag.EstimateRateCurS)

                    </td>
                    <td>
                        Last Purchase Rate Currency :  @Html.TextBox("LastPurchaseRateCurS")

                    </td>
                    <td>
                        Estimate Value Currency : @Html.DropDownList("EstimateValueCurS", (SelectList)ViewBag.EstimateRateCurS)
                    </td>

                </tr>


                <tr>
                    <td>
                        Remarks : @Html.TextBox("RemarksS", ViewBag.RemarksS as string)
                    </td>
                    <td> Is Close : @Html.CheckBox("IsCloseS", Convert.ToBoolean(ViewBag.IsCloseS as string)) </td>
                    <td></td>
                    <td>


                        <input type="button" id="btnGetAddedForm" value="Add" />



                    </td>



                </tr>
            </table>



        </p>
    </div>
                            }


<script>
    $(document).ready(function () {



        $("input[name^='Date']").each(function (i, e) {

            var tempDate = $(e).val().toString();
            if (tempDate.length > 9) {
                var DateToShow = tempDate.substring(0, 10);
                $(e).val(DateToShow);

            }
        });



        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    if ($(buttons[btn]).attr('id') != 'btnGetAddedForm') {
                        $(buttons[btn]).prop('disabled', true);
                    }
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });





        $('#ItemNameS').change(function () {

            $.ajax({
                url: '@Url.Action("ItemDescriptionShow", "SprOrIndentRegisters")',
                type: "GET",
                dataType: "JSON",
                data: {
                    ItemName: $('#ItemNameS').val()
                },
                success: function (data) {

                    console.log(data);
                    if ($.trim(data)) {
                        $('#itemDesShow').text(data.ItemDescription);
                        $('#UOMS').val(data.UOM);

                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //debugger;
                    alert("LastItemPurchseRate");
                }
            });



            $.ajax({
                url: '@Url.Action("GetItemDetialByItemName", "SprOrIndentRegisters")',
                type: "GET",
                dataType: "JSON",
                data: {
                    ItemName: $('#ItemNameS').val()
                },
                success: function (data) {

                    $('#ItemCodeS').val(data.ItemCode);
                    $('#ItemCodeSShow').val(data.ItemCode);
                    $.ajax({
                        url: '@Url.Action("ItemStatusByItemName", "SprOrIndentRegisters")',
                        type: "GET",
                        dataType: "JSON",
                        data: {
                            ItemName: $('#ItemNameS').val()
                        },
                        success: function (data) {
                            if ($.trim(data)) {
                                $('#PresentRequirementS').val(data.ReorderLavel);
                                $('#StockInHandS').val(data.TotalStockKg);

                                $('#AverageConsumptionS').val(data.MonthlyAvgConsump);

                            }

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            //debugger;
                            alert("ItemStatusByItemName");
                        }
                    });

                    $.ajax({
                        url: '@Url.Action("LastItemPurchseRate", "SprOrIndentRegisters")',
                        type: "GET",
                        dataType: "JSON",
                        data: {
                            ItemName: $('#ItemNameS').val()
                        },
                        success: function (data) {

                            console.log(data);
                            if ($.trim(data)) {
                                $('#LastPurchaseRateS').val(data.EstimateRate);
                                $('#LastPurchaseRateCurS').val(data.EstimateValueCur);
                                $('#EstimateRateCurS').val(data.EstimateValueCur);
                                $('#UOMS').val(data.UOM);
                                

                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            //debugger;
                            alert("LastItemPurchseRate");
                        }
                    });





                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //debugger;
                    alert(textStatus);
                }
            });
        });






        $("#btnGetAddedForm").click(function () {




            var tokenIsValid = 0;
            var VarPresentRequirement = $("#PresentRequirementS").val();
            if ($.isNumeric(VarPresentRequirement) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Present Rquirement ");

            }
            var VarStockInHandS = $("#StockInHandS").val();
            if ($.isNumeric(VarStockInHandS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Stock In Hands ");

            }

            //AverageConsumptionS

            var VarAverageConsumptionS = $("#AverageConsumptionS").val();
            if ($.isNumeric(VarAverageConsumptionS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Average Consumption ");

            }


            var VarEstimateRateS = $("#EstimateRateS").val();
            if ($.isNumeric(VarEstimateRateS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Estimate Rate ");

            }

            var VarLastPurchaseRateS = $("#LastPurchaseRateS").val();
            if ($.isNumeric(VarLastPurchaseRateS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Last Purchase Rate  ");

            }
            var VarEstimateValueS = $("#EstimateValueS").val();
            if ($.isNumeric(VarEstimateValueS) == false) {
                tokenIsValid = 1;
                alert("Pay Attention on Estimate Value");

            }

            if (tokenIsValid === 0) {

                $('#GetAddedForm').submit();

                $('#btnGetAddedForm').val('Add')

            }
        });
    });
</script>





@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
{
    @Html.AntiForgeryToken()

    int TotalSprOrIndentNo = 0;

    if (Session["DataStore"] != null)
    {
        TotalSprOrIndentNo = ((List<SilGlobalFashion.Models.SprOrIndentRegister>)Session["DataStore"]).Count;
    }

    <div class="alert-success">

        <div class="alert-warning">

            <table class="table" width="300" style="color:black;">

                <tr>
                    <th>
                        <h5>Item Name</h5>
                    </th>
                    <th>
                        <h5> Item Code</h5>

                    </th>
                    <th>
                        <h5>UOM </h5>
                    </th>
                    <th>
                        <h5>Present Rquirement</h5>

                    </th>
                    <th>
                        <h5> Stock In Hand </h5>
                    </th>
                    <th>
                        <h5> Average Consumption </h5>
                    </th>
                    <th>
                        <h5> Estimate Rate </h5>

                    </th>
                    <th>
                        <h5> Estimate Rate Currency </h5>

                    </th>
                    <th>
                        <h5> Last Purchase Rate </h5>

                    </th>
                    <th>
                        <h5> Last Purchase Rate Currency </h5>

                    </th>
                    <th>
                        <h5> Estimate Value </h5>

                    </th>
                    <th>
                        <h5> Estimate Value Currency </h5>

                    </th>
                    <th>
                        <h5> Remarks </h5>

                    </th>


                </tr>

                @for (var i = 0; i < TotalSprOrIndentNo; i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(it => it[i].ItemName)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].ItemCode)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].UOM)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].PresentRequirement)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].StockInHand)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].AverageConsumption)
                        </td>

                        <td>
                            @Html.DisplayFor(it => it[i].EstimateRate)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].EstimateRateCur)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].LastPurchaseRate)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].LastPurchaseRateCur)
                        </td>

                        <td>
                            @Html.DisplayFor(it => it[i].EstimateValue)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].EstimateValueCur)
                        </td>
                        <td>
                            @Html.DisplayFor(it => it[i].Remarks)
                        </td>
                    </tr>


                }

                <tr>
                    <th>

                    </th>
                    <th>


                    </th>
                    <th>

                    </th>
                    <th>


                    </th>
                    <th>

                    </th>
                    <th>

                    </th>
                    <th>
                    </th>
                    <th>
                    </th>
                    <th>

                    </th>
                    <th>
                    </th>
                    <th>
                    </th>
                    <th>


                        <div class="btn btn-warning">
                            @Html.ActionLink("Refresh", "PageRefresh")
                        </div>

                    </th>
                    <th>

                        <input type="submit" id="save" value="Save" class="btn btn-success" />

                    </th>


                </tr>
            </table>

        </div>

    </div>
}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">

    $(document).ready(function () {






        

        $("#ReqBySecOrDepS").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetReqBySecOrDep")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        ReqBySecOrDep : $('#ReqBySecOrDepS').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });



        $("#ItemCodeS").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetItemCode")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        ItemCode: $('#ItemCodeS').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });


        $("#ItemNameS").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetItemName")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        ItemName: $('#ItemNameS').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });


        $("#SprOrIndentDateS").attr("autocomplete", "off");

        $('#PresentRequirementS').change(function () {

            var recQty = $('#PresentRequirementS').val();
            var parseRecQty = parseFloat(recQty);
            var uniPri = $('#EstimateRateS').val();

            var parseUniPri = parseFloat(uniPri);

            if ($.isNumeric(recQty) && $.isNumeric(uniPri)) {

                var tempTotal = parseRecQty * parseUniPri;

                $("#EstimateValueS").val(tempTotal.toString());

            }
        });

        $('#EstimateRateS').change(function () {

            var recQty = $('#PresentRequirementS').val();
            var parseRecQty = parseFloat(recQty);
            var uniPri = $('#EstimateRateS').val();
            var parseUniPri = parseFloat(uniPri);
            if ($.isNumeric(recQty) && $.isNumeric(uniPri)) {
                var tempTotal = parseRecQty * parseUniPri;

                $("#EstimateValueS").val(tempTotal.toString());

            }
        });






    });
</script>

<script type="text/javascript">


</script>
