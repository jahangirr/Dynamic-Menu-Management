@model PagedList.IPagedList<SilGlobalFashion.Models.SprOrIndentRegister>

@using PagedList.Mvc;
@using SilGlobalFashion.Repository;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    Html.RenderPartial("MenuView");
    ViewBag.Title = "SPR Or Indent Registration";
}


<link href="~/Content/TableStyle.css" rel="stylesheet" />


<h2>SPR Creation </h2>

<link href="~/Content/TableStyle.css" rel="stylesheet" />

<div class="alert-primary">

    @using (Html.BeginForm("Index", "SprOrIndentRegisters", FormMethod.Get))
    {

        <table>
            <tr>
                <td width="30%">
                    Select Parameter : @Html.DropDownList("selectionItems", (SelectList)ViewBag.selectionItems)

                    <br />

                    <input type="submit" value="Search" class="btn-danger" />
                    <input type="button" value="Reset" class="btn-success" id="bReset" />

                </td>
                <td width="70%">

                    <div id="selectionDivToShow" style="border:dotted; color:black; background-color:Highlight;">

                    </div>
                </td>
            </tr>
        </table>

        <p>

            @{
                GlobCreatedFunction globbCreFunc = new GlobCreatedFunction();
                DateTime? SprOrIndentDateVar = null;

                try
                {
                    SprOrIndentDateVar = Convert.ToDateTime(globbCreFunc.GetDate(ViewBag.SprOrIndentDate));
                }
                catch (Exception ex)
                {

                }


            }


            <table id="SearchInfoTable" class="table" style="color:black;">

                <tr>
                    <td>
                        Find by Mother SPR OR Indent No : @Html.TextBox("MOMSprOrIndentNo", ViewBag.MOMSprOrIndentNo as string)
                    </td>

                </tr>

                <tr>
                    <td>
                        Find by SPR OR Indent No : @Html.TextBox("SprOrIndentNo", ViewBag.SprOrIndentNo as string)
                    </td>

                </tr>
                <tr>
                    <td>
                       

                    Find By SPR OR Indent Date:    @Html.JQueryUI().Datepicker("SprOrIndentDate", SprOrIndentDateVar)

                       
                        
                      
                    </td>

                </tr>
                <tr>
                    <td>
                        Find by Item Code: @Html.TextBox("ItemCode", ViewBag.ItemCode as string)

                    </td>


                </tr>

                <tr>
                    <td>
                        Find by Item Name: @Html.TextBox("ItemName", ViewBag.ItemName as string)
                    </td>
                </tr>
                <tr>

                    <td>
                        Find by Req By Sec or Dept : @Html.TextBox("ReqBySecOrDep", ViewBag.ReqBySecOrDep as string)

                    </td>
                </tr>
                <tr>
                    <td>
                        Find by UOM : @Html.TextBox("UOM", ViewBag.UOM as string)


                    </td>

                </tr>

                <tr>
                    <td>
                        Find by Is Close : @Html.CheckBox("IsClose", Convert.ToBoolean( ViewBag.IsClose as string))


                    </td>

                </tr>


             
            </table>



        </p>
                            }

</div>




<script type="text/javascript">
    $(document).ready(function () {



        $('#bReset').click(function () {

            $('#ItemCode').val('');
            $('#ItemName').val('');
            $('#SprOrIndentNo').val('');
            $('#MOMSprOrIndentNo').val('');
            $('#SprOrIndentDate').val('');
            $('#UOM').val('');
            $('#ReqBySecOrDep').val('');
            $('#IsClose').val('false');

           

            sessionStorage.setItem("SpecialOrIndent_ItemCode", '');
            sessionStorage.setItem("SpecialOrIndent_ItemName", '');
            sessionStorage.setItem("SpecialOrIndent_SprOrIndentNo", '');
            sessionStorage.setItem("SpecialOrIndent_MOMSprOrIndentNo", '');
            sessionStorage.setItem("SpecialOrIndent_SprOrIndentDate", '');
            sessionStorage.setItem("SpecialOrIndent_UOM", '');
            sessionStorage.setItem("SpecialOrIndent_ReqBySecOrDep", '');
            sessionStorage.setItem("SpecialOrIndent_IsClose", 'false');
           



        });




        var SpecialOrIndent_ItemCode_value = sessionStorage.getItem("SpecialOrIndent_ItemCode");
        if (SpecialOrIndent_ItemCode_value == null)
        {
            sessionStorage.setItem("SpecialOrIndent_ItemCode", '');
        } else
        {
            sessionStorage.setItem("SpecialOrIndent_ItemCode", SpecialOrIndent_ItemCode_value);
        }


        var SpecialOrIndent_ItemName_value = sessionStorage.getItem("SpecialOrIndent_ItemName");
        if (SpecialOrIndent_ItemName_value == null) {
            sessionStorage.setItem("SpecialOrIndent_ItemName", '');
        } else {
            sessionStorage.setItem("SpecialOrIndent_ItemName", SpecialOrIndent_ItemName_value);
        }




        var SpecialOrIndent_SprOrIndentNo_value = sessionStorage.getItem("SpecialOrIndent_SprOrIndentNo");
        if (SpecialOrIndent_SprOrIndentNo_value == null) {
            sessionStorage.setItem("SpecialOrIndent_SprOrIndentNo", '');
        } else {
            sessionStorage.setItem("SpecialOrIndent_SprOrIndentNo", SpecialOrIndent_SprOrIndentNo_value);
        }

        var SpecialOrIndent_MOMSprOrIndentNo_value = sessionStorage.getItem("SpecialOrIndent_MOMSprOrIndentNo");
        if (SpecialOrIndent_MOMSprOrIndentNo_value == null) {
            sessionStorage.setItem("SpecialOrIndent_MOMSprOrIndentNo", '');
        } else {
            sessionStorage.setItem("SpecialOrIndent_MOMSprOrIndentNo", SpecialOrIndent_MOMSprOrIndentNo_value);
        }


        var SpecialOrIndent_SprOrIndentDate_value = sessionStorage.getItem("SpecialOrIndent_SprOrIndentDate");
        if (SpecialOrIndent_SprOrIndentDate_value == null) {
            sessionStorage.setItem("SpecialOrIndent_SprOrIndentDate", '');
        } else {
            sessionStorage.setItem("SpecialOrIndent_SprOrIndentDate", SpecialOrIndent_SprOrIndentDate_value);
        }





        var SpecialOrIndent_UOM_value = sessionStorage.getItem("SpecialOrIndent_UOM");
        if (SpecialOrIndent_UOM_value == null) {
            sessionStorage.setItem("SpecialOrIndent_UOM", '');
        } else {
            sessionStorage.setItem("SpecialOrIndent_UOM", SpecialOrIndent_UOM_value);
        }






        var SpecialOrIndent_ReqBySecOrDep_value = sessionStorage.getItem("SpecialOrIndent_ReqBySecOrDep");
        if (SpecialOrIndent_ReqBySecOrDep_value == null) {
            sessionStorage.setItem("SpecialOrIndent_ReqBySecOrDep", '');
        } else {
            sessionStorage.setItem("SpecialOrIndent_ReqBySecOrDep", SpecialOrIndent_ReqBySecOrDep_value);
        }


        var SpecialOrIndent_IsClose_value = sessionStorage.getItem("SpecialOrIndent_IsClose");
        if (SpecialOrIndent_IsClose_value == null) {
            sessionStorage.setItem("SpecialOrIndent_IsClose", 'false');
        } else {
            sessionStorage.setItem("SpecialOrIndent_IsClose", SpecialOrIndent_IsClose_value);
        }





        $('#ItemCode').change(function () {

            sessionStorage.setItem("SpecialOrIndent_ItemCode", $('#ItemCode').val());
        });

        $('#ItemName').change(function () {

            sessionStorage.setItem("SpecialOrIndent_ItemName", $('#ItemName').val());
        });

        $('#SprOrIndentNo').change(function () {

            sessionStorage.setItem("SpecialOrIndent_SprOrIndentNo", $('#SprOrIndentNo').val());
        });

        $('#MOMSprOrIndentNo').change(function () {

            sessionStorage.setItem("SpecialOrIndent_MOMSprOrIndentNo", $('#MOMSprOrIndentNo').val());
        });

        $('#SprOrIndentDate').change(function () {

            sessionStorage.setItem("SpecialOrIndent_SprOrIndentDate", $('#SprOrIndentDate').val());
        });
        $('#UOM').change(function () {

            sessionStorage.setItem("SpecialOrIndent_UOM", $('#UOM').val());

        });

        $('#ReqBySecOrDep').change(function () {

            sessionStorage.setItem("SpecialOrIndent_ReqBySecOrDep", $('#ReqBySecOrDep').val());

        });


        $('#IsClose').change(function () {


            if ($(this).prop("checked")) {
                
                sessionStorage.setItem("SpecialOrIndent_IsClose", 'true');

            } else {
                sessionStorage.setItem("SpecialOrIndent_IsClose", 'false');

            }


          

        });
        

        $("#SearchInfoTable tr").each(function () {
                $(this).hide();
        });

        $("#selectionItems").change(function () {

            $("#SearchInfoTable tr").each(function () {
                var row_index = $(this).index();
                var ddlValue = $("#selectionItems").val();
                if (ddlValue.toString() == row_index.toString())
                {
                    $(this).show();
                }
                else
                {
                    $(this).hide();
                }

            });


            var ItemCode =  sessionStorage.getItem("SpecialOrIndent_ItemCode");
            var ItemName = sessionStorage.getItem("SpecialOrIndent_ItemName");
            var SprOrIndentNo = sessionStorage.getItem("SpecialOrIndent_SprOrIndentNo");
            var MOMSprOrIndentNo = sessionStorage.getItem("SpecialOrIndent_MOMSprOrIndentNo");
            
            var SprOrIndentDate = sessionStorage.getItem("SpecialOrIndent_SprOrIndentDate");
            var UOM = sessionStorage.getItem("SpecialOrIndent_UOM");
            var ReqBySecOrDep = sessionStorage.getItem("SpecialOrIndent_ReqBySecOrDep");

            var IsClose = sessionStorage.getItem("SpecialOrIndent_IsClose");

            
            

            var ListOfSelectedValue = 'Item Code : ' + ItemCode + '||  Item Name : ' + ItemName + '|| Mother SPR Or Indent No :' + MOMSprOrIndentNo + '||  Spr Or Indent No : ' + SprOrIndentNo + '||  Spr Or Indent Date : ' + SprOrIndentDate + '||  UOM : ' + UOM + '||  Required By Section Or Department : ' + ReqBySecOrDep + '||  Is Close : ' + IsClose.toString();

             $('#selectionDivToShow').html(ListOfSelectedValue.toString());


        });



        $("input[name^='Date']").each(function (i, e) {

            var tempDate = $(e).val().toString();
            if( tempDate.lenght > 9)
            {
                var DateToShow = tempDate.substring(1, 10);
                $(e).val(DateToShow);

            }
        });



        function ShowNotification() {
            if (!("Notification" in window)) {
                console.log("This browser does not support desktop notification");
            }
            else if (Notification.permission === "granted") {
                var notification = new Notification("SPR Or Indent Approved", {
                    icon: 'Images/end-chat.png',
                    body: 'Please , Approved the Spr Or Indent'
                });
            }
            else if (Notification.permission !== 'denied') {
                Notification.requestPermission(function (permission) {
                    if (!('permission' in Notification)) {
                        Notification.permission = permission;
                    }
                    if (permission === "granted") {
                        var notification = new Notification("SPR Or Indent Approved", {
                            icon: 'Images/end-chat.png',
                            body: 'Please , Approved the Spr Or Indent'
                        });
                    }
                });
            }


        }


        setInterval(ShowNotification, 150000);








    });
</script>









<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div>


    <table class="table-bordered" style="background-color:#C0C0C0;border:2px; border-color:blue;color:black;">
        <tr>

            <th>
                <h5>Mother Spr Or Ind. No</h5>

            </th>

            <th>
                <h5>Spr Or Ind. No</h5>

            </th>
            <th>
                <h5>Spr Or Ind. Date</h5>

            </th>
            <th>
                <h5>Req. By Sec Or Dep</h5>

            </th>
            <th>
                <h5> Item       Name</h5>

            </th>
            <th>
                <h5> Item Code </h5>

            </th>
            <th>
                <h5> UOM </h5>

            </th>
            <th>
                <h5>Present  Req</h5>


            </th>
            <th>
                <h5>Stock In Hand</h5>

            </th>
            <th>
                <h5>Ave. Consump.</h5>

            </th>
            <th>
                <h5>Est. Rate</h5>

            </th>
            <th>
                <h5>Last Purch Rate </h5>

            </th>
            <th>
                <h5>Estimate Value </h5>

            </th>
            <th>
                <h5>.      Remarks   .</h5>

            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.MOMSprOrIndentNo)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.SprOrIndentNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SprOrIndentDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReqBySecOrDep)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UOM)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PresentRequirement)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockInHand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AverageConsumption)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimateRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastPurchaseRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimateValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

</div>

 Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    MOMSprOrIndentNo = ViewBag.MOMSprOrIndentNo,
    SprOrIndentNo = ViewBag.SprOrIndentNo,
    SprOrIndentDate = ViewBag.SprOrIndentDate,
    ItemCode = ViewBag.ItemCode,
    ItemName = ViewBag.ItemName,
    ReqBySecOrDep = ViewBag.ReqBySecOrDep,
    UOM = ViewBag.UOM,
    IsClose = ViewBag.IsClose
    

}))


<script type="text/javascript">
    $(document).ready(function () {





        $("#UOM").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetUOM")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        UOM: $('#UOM').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });



        $("#ReqBySecOrDep").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetReqBySecOrDep")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        ReqBySecOrDep: $('#ReqBySecOrDep').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });


        $("#ItemName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetItemName")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        ItemName: $('#ItemName').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });


        $("#ItemCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetItemCode")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        ItemCode: $('#ItemCode').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });



        $("#SprOrIndentNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSprOrIndentNo")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        SprOrIndentNo: $('#SprOrIndentNo').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });



        $("#MOMSprOrIndentNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetMOMSprOrIndentNo")',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        MOMSprOrIndentNo: $('#MOMSprOrIndentNo').val()
                    },
                    success: function (data) {

                        response($.map(data, function (value, index) {
                            //alert(index);
                            return {
                                label: value,
                                value: value
                            }
                        })
                        );
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //debugger;
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                // Do something with  "ui.item.Id" or "ui.item.Name" or any of the other properties you selected to return from the action
            }
        });

       




    });
</script>
